{
  "comments": [
    {
      "key": {
        "uuid": "7c097cee_13b20012",
        "filename": "fixme_mem.h",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1006692
      },
      "writtenOn": "2020-09-18T19:23:56Z",
      "side": 1,
      "message": "Are the SCUDO headers exposed at all in the NDK?  If so we can compile SkMemory_malloc.cpp with the appropriate build flags and then guard this code with SK_BUILD_FOR_ANDROID",
      "revId": "18f146475c0ae46721142fa844ad9c8da96c62f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db9a5ca5_39f845fd",
        "filename": "fixme_mem.h",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-09-18T20:41:41Z",
      "side": 1,
      "message": "SCUDO headers would be considered part of the platform build (like libbinder), and I think it\u0027s unlikely we would expose a hook for this in the NDK. Do you mean that this code is compiled and used inside of an app? For instance, libhwui uses skia to implement SDK/NDK APIs that would be used by an app, but it is not restricted to run in an app; it\u0027s part of the platform.\n\nBut, ahah! I see SK_BUILD_FOR_ANDROID_FRAMEWORK now. That should work. Thanks!",
      "parentUuid": "7c097cee_13b20012",
      "revId": "18f146475c0ae46721142fa844ad9c8da96c62f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9e15f81_cd5230e0",
        "filename": "fixme_mem.h",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1006692
      },
      "writtenOn": "2020-09-18T21:06:03Z",
      "side": 1,
      "message": "I was hoping for SK_BUILD_FOR_ANDROID because I could see the benefit for other Skia clients (flutter, chrome, etc) outside of the platform to be able to call mallopt with this param/value combo.\n\nWe would need to do something other than abort() though if the operation failed and you weren\u0027t SK_BUILD_FOR_ANDROID_FRAMEWORK",
      "parentUuid": "db9a5ca5_39f845fd",
      "revId": "18f146475c0ae46721142fa844ad9c8da96c62f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e41f07a5_40849440",
        "filename": "fixme_mem.h",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-09-18T21:08:51Z",
      "side": 1,
      "message": "yeah, the plan is to have a wider API for tuning memory-related stuff in S, so that apps can choose their own security/performance trade-offs.",
      "parentUuid": "e9e15f81_cd5230e0",
      "revId": "18f146475c0ae46721142fa844ad9c8da96c62f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d69a594f_1ee631b4",
        "filename": "fixme_mem.h",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1006692
      },
      "writtenOn": "2020-09-18T21:14:10Z",
      "side": 1,
      "message": "That would be awesome.  Until then SK_BUILD_FOR_ANDROID_FRAMEWORK is the best path forward.  We can also update the Android.bp file for Skia (or more accurately the script that generates the bp file) to include whatever SCUDO deps we need in order to get access to the header that defines that param.",
      "parentUuid": "e41f07a5_40849440",
      "revId": "18f146475c0ae46721142fa844ad9c8da96c62f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b878de3_7710fc1d",
        "filename": "fixme_mem.h",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-09-18T21:17:07Z",
      "side": 1,
      "message": "just you talking about that is making me want to go over to the scudo project and check that we\u0027ve set the visibility right so that isn\u0027t possible :-)\n\nwe definitely don\u0027t want anyone doing that.",
      "parentUuid": "d69a594f_1ee631b4",
      "revId": "18f146475c0ae46721142fa844ad9c8da96c62f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1c0329f_5e8a0249",
        "filename": "fixme_mem.h",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-09-18T21:22:35Z",
      "side": 1,
      "message": "That makes sense. Alternatively, will you expose these APIs from libc?\n\nAlso, b/c include_dirs (or copy paste), there isn\u0027t really any defense anyway.",
      "parentUuid": "5b878de3_7710fc1d",
      "revId": "18f146475c0ae46721142fa844ad9c8da96c62f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f4b3984_80c73216",
        "filename": "fixme_mem.h",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-09-18T21:23:49Z",
      "side": 1,
      "message": "\u003e will you expose these APIs from libc\n\nyes, the API i\u0027m saying will be added in S will be in libc.",
      "parentUuid": "a1c0329f_5e8a0249",
      "revId": "18f146475c0ae46721142fa844ad9c8da96c62f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ae1ac9b_965b7df3",
        "filename": "fixme_mem.h",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-09-18T21:26:33Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3f4b3984_80c73216",
      "revId": "18f146475c0ae46721142fa844ad9c8da96c62f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06524108_4b476d9c",
        "filename": "src/ports/SkMemory_malloc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-09-18T19:01:19Z",
      "side": 1,
      "message": "main questions for jreck:\n- how should I go about getting a change here merged (upstream?)\n- is there an appropriate place/way to add a SCUDO dependency? (I can actually avoid the RAII class here, I thought there would be a lot more allocation sites, but it makes sense skia abstracts that away)\n- any other places you can think of where there might be a problem?",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 22
      },
      "revId": "18f146475c0ae46721142fa844ad9c8da96c62f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "254d1ba7_30eea6e8",
        "filename": "src/ports/SkMemory_malloc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2020-09-18T19:09:49Z",
      "side": 1,
      "message": "+djsollen for to answer these questions",
      "parentUuid": "06524108_4b476d9c",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 22
      },
      "revId": "18f146475c0ae46721142fa844ad9c8da96c62f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "441c1ad7_00d815e6",
        "filename": "src/ports/SkMemory_malloc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1006692
      },
      "writtenOn": "2020-09-18T19:23:56Z",
      "side": 1,
      "message": "We would want to land this CL at skia.googlesource.com and it would then get automerged into Android.\n\nI think SCUDO is applied at a per binary level and Skia is included in the libhwui binary and other test binaries in frameworks/base/libs/hwui.  Is it reasonable to add any dependencies to the makefiles there?",
      "parentUuid": "254d1ba7_30eea6e8",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 22
      },
      "revId": "18f146475c0ae46721142fa844ad9c8da96c62f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7005c59b_33f4d468",
        "filename": "src/ports/SkMemory_malloc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-09-18T20:41:41Z",
      "side": 1,
      "message": "Yeah, we would definitely want to add explicit dependencies. I\u0027ll have to wait until the SCUDO APIs are finalized and we figure out how to handle the API issue, but I can certainly move it there then. Thanks!",
      "parentUuid": "441c1ad7_00d815e6",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 22
      },
      "revId": "18f146475c0ae46721142fa844ad9c8da96c62f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5954cc0_eded591c",
        "filename": "src/ports/SkMemory_malloc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-09-18T20:41:41Z",
      "side": 1,
      "message": "libscudo is included statically once in libc.\n\nI suppose what I mean is, if we have an Android-only header library like \"libscudo_flags\" or similar, is it okay to include here?",
      "parentUuid": "441c1ad7_00d815e6",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 22
      },
      "revId": "18f146475c0ae46721142fa844ad9c8da96c62f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01e9b85b_7c1d4c67",
        "filename": "src/ports/SkMemory_malloc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-09-18T20:49:56Z",
      "side": 1,
      "message": "we wouldn\u0027t accept that as API on our side, so \"no, but that won\u0027t be a problem anyway\" :-)",
      "parentUuid": "e5954cc0_eded591c",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 22
      },
      "revId": "18f146475c0ae46721142fa844ad9c8da96c62f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "201973dd_4305e99a",
        "filename": "src/ports/SkMemory_malloc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-09-25T23:54:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01e9b85b_7c1d4c67",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 22
      },
      "revId": "18f146475c0ae46721142fa844ad9c8da96c62f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}